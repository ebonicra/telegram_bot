from aiogram.types import CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
import time

from players_classes import Protagonist
from database.get_db import get_quest_data, update_quest_data, get_user_data, update_user_data, get_npc_data, update_npc_data
from . import main_buttons


async def quest(callback_query: CallbackQuery, npc, npc_id: int, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–≤–µ—Å—Ç NPC –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è. –ï—Å–ª–∏ –∫–≤–µ—Å—Ç —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω, —Å–æ–æ–±—â–∞–µ—Ç –æ–± —ç—Ç–æ–º.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - npc: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ NPC.
    - npc_id: ID NPC.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    quest_name = npc.quest
    done_quest = get_quest_data("done", quest_name, user_id)
    if done_quest:
        await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
        keyboard = InlineKeyboardBuilder()
        await callback_query.answer("üó£ –í–∞–π-–º–∞–π, –º–æ—è —Ç—ã —Ö–æ—Ä–æ—à–∞—è, —Ç—ã –∂–µ —É–∂–µ –ø—Ä–æ—à–ª–∞ –º–æ—ë –∑–∞–¥–∞–Ω–∏–µ.\n"
                                    "–¢—ã —É–∂–µ —É–º–Ω–∏—á–∫–∞.\n–ò —Ç—ã —É–∂–µ –æ—Ñ–∏–≥–µ–ª–∞.\n–ò–¥–∏ –æ—Ç—Å—é–¥–∞, –º–æ—à–µ–Ω–Ω–∏—Ü–∞.")
        time.sleep(1)
        keyboard.button(text="‚¨Ö –ù–µ –±—ã–∫–æ–≤–∞—Ç—å –∏ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ –¥—Ä—É–≥–æ–º ‚¨Ö",
                        callback_data=f"npc_{npc_id}")
        await callback_query.answer("–¢—É—Ü-—Ç—É—Ü, —É–ª–∏—Ç–æ—á–∫–∞ - —Ç—ã –∫–∞–∫ –≤—Å–µ–≥–¥–∞ –æ—Ñ–∏–≥–µ–Ω–Ω–∞.", reply_markup=keyboard.as_markup())
    else:
        if quest_name == 'Bar':
            await quest_bar(callback_query, npc_id, user_id)
        elif quest_name == 'Photographer':
            await quest_photographer(callback_query, npc_id, user_id)
        elif quest_name == 'Recipe':
            await quest_recipe(callback_query, npc_id, user_id)
        elif quest_name == 'Cigarette':
            await quest_cigarette(callback_query, npc_id, user_id)
        elif quest_name == 'Quiz':
            await quest_quiz(callback_query, npc_id, user_id)


async def quest_bar(callback_query: CallbackQuery, npc_id: int, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–≤–µ—Å—Ç "Bar" NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - npc_id: ID NPC.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await callback_query.answer("üó£ –ö–æ—Ä–æ—á–µ–µ–µ–µ, —è –≤—Å–µ–≥–¥–∞ —Ö–æ—Ç–µ–ª —Å—Ç–∞—Ç—å –±–∞—Ä–º–µ–Ω–æ–º.")
    time.sleep(1)
    await callback_query.answer("üó£ –ò –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–∞—Ä–º–µ–Ω–æ–º, –∞ —Ç–∞–∫–∏–º —Å–µ–∫—Å–∏-—à–º–µ–∫—Å–∏-–∫—Ä—É—Ç–æ-–≤–∞—É-–æ–±–∞–ª–¥–µ—Ç—å.")
    time.sleep(1)
    await callback_query.answer("üó£ –•–æ—á—É –∫—Ä—É—Ç–∏—Ç—å –≤–æ—Ç —ç—Ç–∏–º–∏ –ø—Ä–∏–∫–æ–ª—å–Ω—ã–º–∏ —à—Ç—É–∫–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –∫—Ä—É—Ç—è—Ç –±–∞—Ä–º–µ–Ω—ã, —Ç–∏–ø–∞ –≤–∞—É —Ñ–æ–∫—É—Å-–ø–æ–∫—É—Å –∏ –Ω–µ–∫—Ç–∞—Ä –±–æ–≥–æ–≤.")
    time.sleep(1)
    await callback_query.answer("üó£ –ù–æ –≤–æ—Ç –ø—Ä–æ–±–ª–µ–º–∞, —è –ø–æ–Ω—è—Ç–∏—è –Ω–µ –∏–º–µ—é, —á—Ç–æ —ç—Ç–æ –∑–∞ —à—Ç—É–∫–∏, –∫–∞–∫ –æ–Ω–∏ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è –∏ –ø–æ—á–µ–º—É —è –≤–æ–æ–±—â–µ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—é —Å —É–ª–∏—Ç–∫–æ–π?")
    time.sleep(1)
    await callback_query.answer("üó£ –ü–æ–º–æ–≥–∏ –º–Ω–µ, –ø–æ–º–æ–≥–∏–∏–∏–∏ –º–Ω–µ–µ–µ–µ —Å—Ç–∞—Ç—å –ª–µ–≥–µ–Ω–¥–æ–π —ç—Ç–æ–≥–æ –±–∞—Ä–∞.")
    time.sleep(1)
    await callback_query.answer("üó£ –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ —Ö–æ—Ç—è –±—ã –ø—Ä–æ 5 –±–∞—Ä–º–µ–Ω—Å–∫–∏—Ö —à—Ç—É–∫, –∞ —è –Ω–∏–∫–æ–º—É –Ω–µ —Ä–∞—Å—Å–∫–∞–∂—É, —á—Ç–æ —Ç—ã —É–ª–∏—Ç–∫–∞.\n–ê, –Ω—É –¥–∞, –µ—â—ë –¥–µ–Ω—è–∫ –¥–∞–º.")
    time.sleep(1)
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üß† –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –ø–æ–∑–Ω–∞–Ω–∏—è–º–∏ üß†",
                    callback_data="bar")
    keyboard.button(text="üôÖ‚Äç‚ôÄÔ∏è –ù–∞—Ñ–∏–≥ —ç—Ç–æ–≥–æ –±–∞—Ä–º–µ–Ω–∞ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–Ω–æ–≥–æ üôÖ‚Äç‚ôÄÔ∏è",
                    callback_data=f"npc_{npc_id}")
    keyboard.adjust(1)
    await callback_query.answer("–ß—Ç–æ –¥–µ–ª–∞—Ç—å –±—É–¥–µ–º?", reply_markup=keyboard.as_markup())


async def bar(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–≤–µ—Å—Ç–∞ "Bar".
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    protagonist = Protagonist(user_id, 'default')
    protagonist.send_inventory()
    count_bartender_items = len(protagonist.bartender_items)
    if count_bartender_items == 0:
        await callback_query.answer("üó£ –¢—ã –≤–∞–ª–µ–Ω–æ–∫, —Ç—ã —á—ë –ª—é–¥–µ–π —Ç–æ –¥—É—Ä–∏—à—å,\n–¢—ã –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞–µ—à—å –æ –±–∞—Ä–º–µ–Ω—Å–∫–∏—Ö —à—Ç—É–∫–∞—Ö.")
        keyboard.button(
            text="üôÅ –ò–¥—Ç–∏ –≥—É–ª—è—Ç—å –∏ –±–∞—Ä–º–µ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è üôÅ", callback_data="to_do")
    else:
        response = protagonist.send_inventory_type('items')
        for i in response:
            await callback_query.answer(i)
            time.sleep(1)
        await callback_query.answer("–í–æ—Ç —ç—Ç–æ —Ç—ã –≤—ã–¥–∞–ª –±–∞–∑—É, –≤–æ—Ç —ç—Ç–æ —Ç—ã –º–æ–ª–æ–¥–µ—Ü.\n–ü–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –Ω–∞ —ç—Ç–æ —Å–∫–∞–∂–µ—Ç —á—É–¥–æ(–Ω–µ—Ç)–±–∞—Ä–º–µ–Ω.")
        time.sleep(2)

    if count_bartender_items >= 5:
        await callback_query.answer("üó£ –°–ø–∞—Å–∏–±–æ –¥–æ—Ä–æ–≥—É—à–∞, —Ç—ã –ª—É—á—à–∞—è –∏–∑ –≤—Å–µ—Ö —ç—Ç–∏—Ö –Ω–µ–¥—Ä—É–∂–µ–ª—é–±–Ω—ã—Ö –≥–æ–ª–æ–¥—Ä–∞–Ω—Ü–µ–≤.\n"
                                    "–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –ª—É—á—à–∏–º –±–∞—Ä–º–µ–Ω–æ–º —ç—Ç–æ–≥–æ –º–∏—Ä–æ–∑–¥–∞–Ω–∏—è.\n"
                                    "–¢–µ–ø–µ—Ä—å —è —Å–∫–ª–æ–Ω—é –∫ –∞–ª–∫–æ–≥–æ–ª–∏–∑–º—É –≤–µ—Å—å –º–∏–∏–∏–∏–∏–∏—Ä.\n\n"
                                    "–ê—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö")
        time.sleep(1)
        await callback_query.answer("üó£ –ê—Ö, –¥–∞, –æ–±–µ—â–µ–Ω–Ω—ã–µ –¥–µ–Ω—é–∂–∫–∏.\n–í–æ—Ç, –¥–µ—Ä–∂–∏, 50 —Ä—É–±–ª–µ–π.\n\n–õ–∞–¥–Ω–æ, —à—É—á—É, –¥–µ—Ä–∂–∏ –ø—è—Ç–∏—Ö–∞—Ç–∫—É.")
        keyboard.button(text="üíµ –í–∑—è—Ç—å money –∏ –≥–æ—Ä–¥–∏—Ç—å—Å—è —Å–æ–±–æ–π üíµ",
                        callback_data="money_500_Bar")
    elif count_bartender_items > 0:
        await callback_query.answer(f"üó£ –ù–µ–ø–ª–æ—Ö–æ, –∫–æ–Ω–µ–Ω—á–æ, –Ω–æ —Å–ª–∞–±–æ–≤–∞—Ç–æ.\nT—ã –∑–Ω–∞–µ—à—å –≤—Å–µ–≥–æ {count_bartender_items}, –∞ —è –ø—Ä–æ—Å–∏–ª —Ö–æ—Ç—è –±—ã 5 –±–∞—Ä–º–µ–Ω—Å–∫–∏—Ö —à—Ç—É–∫.")
        keyboard.button(
            text="üôÅ –ò–¥—Ç–∏ –≥—É–ª—è—Ç—å –∏ –±–∞—Ä–º–µ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è üôÅ", callback_data="to_do")
    await callback_query.answer("–í—ã–±–æ—Ä–∞ –Ω–µ—Ç, –Ω–∞–¥–æ —Ç—ã–∫–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∏–∂–µ:", reply_markup=keyboard.as_markup())


async def quest_photographer(callback_query: CallbackQuery, npc_id: int, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–≤–µ—Å—Ç "Photographer" NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - npc_id: ID NPC.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await callback_query.answer("üó£ –ú–∏—é - –º—è—É, —Ç—ã –≤–æ–æ–±—â–µ –∑–Ω–∞–ª, —á—Ç–æ —è –∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–µ–µ–µ–µ—Ä?")
    time.sleep(1)
    await callback_query.answer("üó£ –ó–∞—à–µ–ª –≤ —ç—Ç—É –∑–∞–±–µ–≥–∞–ª–æ–≤–∫—É, –æ–ø—Ä–æ–∫–∏–Ω—É—Ç—å –±–æ–∫–∞–ª—å—á–∏–∫ –º–∞—Ä—Ç–∏–Ω–∏ –∏ —Å–æ–±—Ä–∞—Ç—å –ø–∞—Ä—É —Ñ–æ—Ç–æ.")
    time.sleep(1)
    await callback_query.answer("üó£ –Ø —Ç–∞–∫ —Ç–æ —Å–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –≤—ã—Å—Ç–∞–≤–∫–æ–π \"–£–±–æ–∂–µ—Å—Ç–≤–æ –∏ —Ö–∞–ª—É–ø–∞\"")
    time.sleep(1)
    await callback_query.answer("üó£ –ù—É –≤–æ–æ–±—â–µ, —Ç—ã –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—à—å –¥–ª—è –º–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏, —Ç–∞–∫ —á—Ç–æ –µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—à—å –ø–∞—Ä—É —Å–≤–æ–∏—Ö —Ñ–æ—Ç–æ, –±—É–¥—É –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª–µ–Ω.")
    time.sleep(1)
    await callback_query.answer("üó£ –ú–Ω–æ–≥–æ–≥–æ —è –æ—Ç —Ç–µ–±—è –Ω–µ –∂–¥—É, —Ç–∞–∫ —á—Ç–æ –º–æ–∂–Ω–æ –¥–∞–∂–µ –ø—Ä–æ—Å—Ç–æ —Å–µ–ª—Ñ–∏ —Å–¥–µ–ª–∞—Ç—å. –®—Ç—É–∫ 5-10 —Å–æ–π–¥–µ—Ç.")
    time.sleep(1)
    await callback_query.answer("üó£ –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –Ω–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ.\n–ó–∞ –∫–∞–∂–¥–æ–µ —Ñ–æ—Ç–æ –ø–ª–∞—á—É —Å–æ—Ç–∫—É –±–∞–∫—Å–æ–≤,\n–∏–ª–∏ —Ç–µ–Ω–≥–µ,\n–∏–ª–∏ —é–∞–Ω–µ–π,\n–∫–æ—Ä–æ—á–µ, –∫–∞–∫–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –±—É–¥–µ—Ç, —Ç–æ –∏ –¥–∞–º.")
    time.sleep(1)
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üì∏ –ü–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–∏ —Å–µ–∫—Å–∏ —Ñ–æ—Ç–æ—á–∫–∏ üì∏",
                    callback_data="photographer")
    keyboard.button(text="üôÖ‚Äç‚ôÄÔ∏è –ù–∞—Ñ–∏–≥ —ç—Ç–æ–≥–æ —Ñ–æ—Ç–æ—á–∫–∏–Ω–∞ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–Ω–æ–≥–æ üôÖ‚Äç‚ôÄÔ∏è",
                    callback_data=f"npc_{npc_id}")
    keyboard.adjust(1)
    await callback_query.answer("–ß—Ç–æ –¥–µ–ª–∞—Ç—å –±—É–¥–µ–º?", reply_markup=keyboard.as_markup())


async def photographer(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–≤–µ—Å—Ç–∞ "Photographer".
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    count_photo = get_quest_data("count", "Selfie", user_id)
    await callback_query.answer("*–ü–æ–∫–∞–∑—ã–≤–∞–µ—à—å —Å–≤–æ–∏ —Ñ–æ—Ç–û—á–∫–∏*")
    time.sleep(1)
    if count_photo == 0:
        await callback_query.answer("üó£ –¢—ã —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ñ–æ—Ç–∫—É —Å–¥–µ–ª–∞–π, –∞ –ø–æ—Ç–æ–º —É–∂–µ –ø—Ä–∏—Ö–æ–¥–∏ –∫–æ –º–Ω–µ.")
        time.sleep(1)
        await callback_query.answer("üó£ –ü–æ —Å–µ–∫—Ä–µ—Ç—É, –≤ —ç—Ç–æ–º –±–∞—Ä–µ –µ—Å—Ç—å –Ω–∏—á—ë —Ç–∞–∫–æ–µ –º–µ—Å—Ç–æ –≥–¥–µ-—Ç–æ –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ, –≥–¥–µ –º–æ–∂–Ω–æ –ø–æ—Ñ–æ—Ç–∞—Ç—å—Å—è.\n"
                                    "–û–±—ã—á–Ω–æ —Ç–∞–º –∑—É–º–µ—Ä—ã –æ—à–∏–≤–∞—é—Ç—Å—è, –Ω–æ —Ç—ã –ø—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã —Ç–æ–∂–µ –º–æ–ª–æ–¥, –∏ —Å–µ–ª—Ñ–∏—Å—å —Å–µ–±–µ –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ.")
        keyboard.button(text="üôÅ –ò–¥—Ç–∏ –≥—É–ª—è—Ç—å –∏ –ø–æ—Ñ–æ—Ç–∫–∞—Ç—å—Å—è üôÅ",
                        callback_data="to_do")
    elif count_photo >= 5:
        await callback_query.answer("üó£ –î–∞–∞–∞, —ç—Ç–æ —Ç–æ —Å–∞–º–æ–µ —É–±–æ–∂–µ—Å—Ç–≤–æ, —á—Ç–æ –º–Ω–µ –∏ –±—ã–ª–æ –Ω—É–∂–Ω–æ.")
        time.sleep(1)
        await callback_query.answer(f"üó£ –¢–∞–∞–∞–∫, —Ç—ã —Å—Ñ–æ—Ç–∞–ª—Å—è {count_photo} —Ä–∞–∑, –∑–Ω–∞—á–∏—Ç —è —Ç–µ–±–µ –¥–æ–ª–∂–µ–Ω {count_photo * 100} –¥–æ–ª–ª–∞—Ä–æ–≤.")
        keyboard.button(text="üíµ –í–∑—è—Ç—å money –∏ –≥–æ—Ä–¥–∏—Ç—å—Å—è —Å–æ–±–æ–π üíµ",
                        callback_data=f"money_{count_photo * 100}_Photographer")
    else:
        await callback_query.answer(f"üó£ –ö—Ä—É—Ç–æ-–∫–ª–∞—Å—Å–Ω–æ –∫–æ–Ω–µ—á–Ω–æ, –Ω–æ —è –ø—Ä–æ—Å–∏–ª –∫–∞–∫ –º–∏–Ω–∏–º—É–º 5 —Ñ–æ—Ç–æ, –∞ —Ç—ã —Å—Ñ–æ—Ç–∫–∞–ª—Å—è –ª–∏—à—å {count_photo}")
        keyboard.button(text="üôÅ –ò–¥—Ç–∏ –≥—É–ª—è—Ç—å –∏ –ø–æ—Ñ–æ—Ç–∫–∞—Ç—å—Å—è üôÅ",
                        callback_data="to_do")
    time.sleep(1)
    await callback_query.answer("–í—ã–±–æ—Ä–∞ –Ω–µ—Ç, –Ω–∞–¥–æ —Ç—ã–∫–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∏–∂–µ:", reply_markup=keyboard.as_markup())


async def quest_recipe(callback_query: CallbackQuery, npc_id: int, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–≤–µ—Å—Ç "Recipe" NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - npc_id: ID NPC.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await callback_query.answer("üó£ –§–∞–∫—Ç –æ–±–æ –º–Ω–µ: —è –æ–±–æ–∂–∞—é –ù–µ–≥—Ä–æ–Ω–∏.")
    time.sleep(1)
    await callback_query.answer("üó£ –Ø –ø—Ä–æ—Å—Ç–æ –≥–æ—Ç–æ–≤ —Å–æ—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–π –±–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å —á–∞—Å–∞–º–∏ –∏ –≥–æ–¥–∞–º–∏.")
    time.sleep(1)
    await callback_query.answer("üó£ –°–æ—Å–∞—Ç—å –µ–≥–æ, –≥–ª–æ—Ç–∞—Ç—å –µ–≥–æ, —Ö–ª–µ–±–∞—Ç—å –µ–≥–æ, –ø–æ—Ö–ª—ë–±—ã–≤–∞—Ç—å, –∞ –≤ –∫–æ–Ω—Ü–µ –µ—â—ë –ø—Ä–∏—á–º–æ–∫–∏–≤–∞—Ç—å.")
    time.sleep(1)
    await callback_query.answer("üó£ –ù–æ –≤ —ç—Ç–æ–º —á–º–æ—à–Ω–æ–º –±–∞—Ä–µ –Ω–µ–≥—Ä–æ–Ω–∏ —Å—É–ø–µ—Ä –¥–æ—Ä–æ–≥–æ–π\n–ê —è —Å–∏–∂—É —É –º–∞–º–∫–µ –Ω–∞ —à–µ–µ, –ø–æ—ç—Ç–æ–º—É –Ω–µ –º–æ–≥—É —Å–µ–±–µ –µ–≥–æ –ø–æ–∑–≤–æ–ª–∏—Ç—å.")
    time.sleep(1)
    await callback_query.answer("üó£ –ù–µ –º–æ–≥ –±—ã —Ç—ã —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –º–Ω–µ —Ä–µ—Ü–µ–ø—Ç –¥–∞–Ω–Ω–æ–≥–æ –Ω–µ–∫—Ç–∞—Ä–∞, –∞ —è —É–∂–µ –±—É–¥—É –µ–≥–æ —Å–∞–º –≥–æ—Ç–æ–≤–∏—Ç—å –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –±—ã—Ç–æ–≤–æ–π –∞–ª–∫–æ–≥–æ–ª–∏–∑–º?")
    time.sleep(1)
    await callback_query.answer("üó£ –î–∞ –Ω–µ –ø–∞—Ä—å—Å—è, —è –∑–∞–ø–ª–∞—á—É —Ç–µ–±–µ.\n–ù–µ–º–Ω–æ–≥–æ, –∫–æ–Ω–µ—á–Ω–æ, —á—Ç–æ —Å–º–æ–≥—É, –Ω–æ –∑–∞–ø–ª–∞—á—É.")
    time.sleep(1)
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="ü•É –†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç –ù–µ–≥—Ä–æ–Ω–∏ ü•É",
                    callback_data="recipe")
    keyboard.button(text="üôÖ‚Äç‚ôÄÔ∏è –ù–∞—Ñ–∏–≥ —ç—Ç–æ–≥–æ –Ω–µ–≥—Ä–æ–Ω–∏—Å—Ç–∞ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–Ω–æ–≥–æ üôÖ‚Äç‚ôÄÔ∏è",
                    callback_data=f"npc_{npc_id}")
    keyboard.adjust(1)
    await callback_query.answer("–ß—Ç–æ –¥–µ–ª–∞—Ç—å –±—É–¥–µ–º?", reply_markup=keyboard.as_markup())


async def recipe(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–≤–µ—Å—Ç–∞ "Recipe".
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    protagonist = Protagonist(user_id, 'default')
    protagonist.send_inventory()
    count_cocktail_recipes = len(protagonist.cocktail_recipes)
    negroni = False
    if count_cocktail_recipes == 0:
        await callback_query.answer("üó£ –ú–∞–ª—ã—à–∫–∞-–≥–ª—É–ø—ã—à–∫–∞, –µ—Å–ª–∏ –Ω–µ —Å–∫–∞–∑–∞—Ç—å —Ö—É–∂–µ.\n–î–∞ —Ç—ã –∂ –≤–æ–æ–±—â–µ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ –Ω–µ –∑–Ω–∞–µ—à—å, —Ñ–∏–≥–ª–∏ —Ç—É—Ç –≤—ã–ø–µ–Ω–¥—Ä–∏–≤–∞–µ—à—å—Å—è?")
    else:
        response = protagonist.send_inventory_type('recipes')
        for i in response:
            if '–ù–µ–≥—Ä–æ–Ω–∏' in i:
                negroni = True
            await callback_query.answer(i)
            time.sleep(1)
        await callback_query.answer("–ù–∏—Ñ–∏–≥–∞ —Å–µ–±–µ, —Å–∫–æ–ª—å–∫–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Ç—ã –∑–Ω–∞–µ—à—å, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∑–∞–ø–ª–∞—Ç—è—Ç –ª–∏ –∑–∞ —ç—Ç–æ?")
        time.sleep(2)

    if negroni:
        await callback_query.answer("üó£ –í–∞—É, –≤–∞—É, –≤–∞—É, —Å–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ, —É–ª–∏—Ç–æ—á–∫–∞ - —É–ª—ã–±–æ—á–∫–∞.\n–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ –º–æ–π –ª—é–±–∏–º—ã–π –Ω–µ–≥—Ä... –æ–π ... –æ–Ω–∏.")
        time.sleep(1)
        await callback_query.answer("üó£ –≠—Ç–æ, –∫–æ–Ω–µ—á–Ω–æ, –Ω–µ —Å–º—ã—Å–ª –∂–∏–∑–Ω–∏, –Ω–æ —Ç–æ–∂–µ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –ø—Ä–æ–∂–∏—Ç—å –µ—â—ë –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π.\n\n–î–µ—Ä–∂–∏ 200 –¥–µ–Ω—è–∫, –±–æ–ª—å—à–µ –Ω–µ –¥–∞–º, –±–æ–ª—å—à–µ –Ω–µ—Ç—É.")
        keyboard.button(text="üíµ –í–∑—è—Ç—å money –∏ –≥–æ—Ä–¥–∏—Ç—å—Å—è —Å–æ–±–æ–π üíµ",
                        callback_data="money_200_Recipe")
    else:
        await callback_query.answer(f"üó£ –¢—ã –¥—É—Ä–æ—á–∫–∞ —Å–æ–≤—Å–µ–º? –¢—É—Ç –Ω–µ—Ç –ù–µ–≥—Ä–æ–Ω–∏.")
        time.sleep(1)
        await callback_query.answer(f"üó£ –ü—Ä–∏—Ö–æ–¥–∏ –∫–æ –º–Ω–µ, –∫–æ–≥–¥–∞ —É–∑–Ω–∞–µ—à—å —Ä–µ—Ü–µ–ø—Ç —Ç–æ–≥–æ, —á—Ç–æ —è —É —Ç–µ–±—è –ø–æ–ø—Ä–æ—Å–∏–ª.")
        keyboard.button(text="üôÅ –ò–¥—Ç–∏ –≥—É–ª—è—Ç—å –∏ –∏—Å–∫–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã üôÅ",
                        callback_data="to_do")
    time.sleep(1)
    await callback_query.answer("–í—ã–±–æ—Ä–∞ –Ω–µ—Ç, –Ω–∞–¥–æ —Ç—ã–∫–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∏–∂–µ:", reply_markup=keyboard.as_markup())


async def quest_cigarette(callback_query: CallbackQuery, npc_id: int, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–≤–µ—Å—Ç–∞ –Ω–∞ —Å–∏–≥–∞—Ä–µ—Ç—ã –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - npc_id: ID NPC.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await callback_query.answer("üó£ –õ—è—è—è—è, –±—Ä–∞—Ç–∏–∫, —Ä–∞–¥–Ω–æ–π\n–û–π, —Å–µ—Å—Ç—Ä–∏—á–∫–∞ —Ç–æ –µ—Å—Ç—å.")
    time.sleep(1)
    await callback_query.answer("üó£ –£–≥–æ—Å—Ç–∏ —Å–∏–≥–∞—Ä–µ—Ç–∫–æ–π, –ø–ª–∏–∑ –ø–ª–∏–∑.")
    time.sleep(1)
    await callback_query.answer("üó£ –Ø –≤aaa–±—â–µ –ø—Ä–æ—Ç–∏–≤ –∫—É—Ä–µ–Ω–∏—è.\n–íaaaaa–±—â–µ —ç—Ç–æ —Ç–∞ –µ—â—ë –≥–∞–¥–æ—Å—Ç—å.\n–ü–æ—Ç–æ–º –µ—â—ë –≤–æ–Ω—è–µ—à—å.\n–ü–æ—Ç–æ–º –µ—â—ë —Ö–∞—Ä–∫–∞–µ—à—å.\n")
    time.sleep(1)
    await callback_query.answer("üó£ –î–∞ –∏ —Å–∞–≥–∞—Ä–µ—Ç—ã —è –Ω–µ –∫—É—Ä—é, —è –ø–∞—Ä—é.\n–ù—É –≤–æ—Ç –∑–Ω–∞–µ—à—å, –≤–∑—è—Ç—å –±—ã –¥—É–¥–∫—É —Å–æ –≤–∫—É—Å–æ–º –º–æ—Ö–∏—Ç–æ –∏–ª–∏ —á–∞—è —Å –±–µ—Ä–≥–∞–º–æ—Ç–æ–º, –º–º–º–º, –≤–∫—É—Å–Ω–µ–Ω—å–∫–æ.")
    time.sleep(1)
    await callback_query.answer("üó£ –ù–æ –º–æ—è –¥—É–¥–∫–∞ —Å–µ–ª–∞, –∞ –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ —Å–∏–≥–∞–º–∏ –∏–¥—Ç–∏ –Ω–µ —Ö–æ—á—É.\n–¢–∞–º —Å–µ–≥–æ–¥–Ω—è –æ–¥–Ω–∞ –Ω–µ –æ—á–µ–Ω—å –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç.\n–ù–µ –ª—é–±–ª—é –µ—ë.")
    time.sleep(1)
    await callback_query.answer("üó£ –ö–æ—Ä–æ—á–µ, —Å—Ç—Ä–µ–ª—å–Ω–∏—à—å —Å–∏–≥—É?\n–ö–æ—Å–∞—Ä—å –¥–∞–º, –º–Ω–µ –¥–ª—è —Å–µ—Å—Ç—Ä–∏—á–∫–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∂–∞–ª–∫–æ.")
    time.sleep(1)
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üö¨ –£–≥–æ—Å—Ç–∏—Ç—å —á–µ–ª–æ–≤–µ—á–∫–∞ —Å–∏–≥–∞—Ä–µ—Ç–∫–æ–π üö¨",
                    callback_data="cigarette")
    keyboard.button(text="üôÖ‚Äç‚ôÄÔ∏è –ù–∞—Ñ–∏–≥ —ç—Ç–æ–≥–æ –ø—Ä–æ–∫—É—Ä—ã—à–∞ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–Ω–æ–≥–æ üôÖ‚Äç‚ôÄÔ∏è",
                    callback_data=f"npc_{npc_id}")
    keyboard.adjust(1)

    await callback_query.answer("–ß—Ç–æ –¥–µ–ª–∞—Ç—å –±—É–¥–µ–º?", reply_markup=keyboard.as_markup())


async def cigarette(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–¥–∞—á–∏ —Å–∏–≥–∞—Ä–µ—Ç.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    other_items = get_user_data("other_items", user_id)
    cigarette = other_items.get('–°–∏–≥–∞—Ä–µ—Ç—ã', 0)
    keyboard = InlineKeyboardBuilder()
    if cigarette > 0:
        other_items['–°–∏–≥–∞—Ä–µ—Ç—ã'] = cigarette - 1
        update_user_data("other_items", other_items, user_id)
        await callback_query.answer("üó£ –°–ø–∞—Å–∏–±–∫–∏, —Ä–æ–¥–Ω–∞—è, —Å–ø–∞—Å–∏–±–∫–∏, –¥–≤—É–≥–ª–∞–∑–∫–∞\n–ò—Ö–∏—Ö–∏—Ö–∏—Ö–∏—Ö–∏—Ö–∏—Ö–∏—Ö–∏—Ö–∏\n\n–¢—ã –±—É–∫–≤–∞–ª—å–Ω–æ —Å–ø–∞—Å–ª–∞ –º–æ—é –ø—Ä–æ–ø–∞—â—É—é –∑–∞–≤–∏—Å–∏–º—É—é –¥—É—à—É.")
        time.sleep(1)
        await callback_query.answer("üó£ –°–∫–æ–ª—å–∫–æ —è —Ç–∞–º —Ç–µ–±–µ –æ–±–µ—â–∞–ª? –ö–æ—Å–∞—Ä—å?\n–í–æ—Ç, –¥–µ—Ä–∂–∏.\n–ì–ª–∞–≤–Ω–æ–µ —Å–∞–º–∞ –Ω–µ –∫—É—Ä–∏ - —ç—Ç–æ –≤—Ä–µ–¥–Ω–æ. ")
        keyboard.button(text="üíµ –í–∑—è—Ç—å money –∏ –≥–æ—Ä–¥–∏—Ç—å—Å—è —Å–æ–±–æ–π üíµ",
                        callback_data="money_1000_Cigarette")
    else:
        await callback_query.answer(f"üó£ –ù—É —á—Ç–æ —Ç–∞–º? –ë—É–¥–µ—Ç –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –Ω–∏–∫–æ—Ç–∏–Ω?")
        time.sleep(1)
        await callback_query.answer(f"üó£ –ü—Ä–∏—Ö–æ–¥–∏ –∫–æ –º–Ω–µ, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç —á–µ–º —É–≥–æ—Å—Ç–∏—Ç—å, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–∏–∑–¥–µ–≤–∞—Ç—å—Å—è.")
        keyboard.button(text="üôÅ –ò–¥—Ç–∏ –≥—É–ª—è—Ç—å –∏ –∏—Å–∫–∞—Ç—å —Å–∏–≥–∏ üôÅ",
                        callback_data="to_do")
        time.sleep(1)
    await callback_query.answer("–í—ã–±–æ—Ä–∞ –Ω–µ—Ç, –Ω–∞–¥–æ —Ç—ã–∫–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∏–∂–µ:", reply_markup=keyboard.as_markup())


async def quest_quiz(callback_query: CallbackQuery, npc_id: int, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–≤–∏–∑–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - npc_id: ID NPC.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await callback_query.answer("üó£ –î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, —è –¥–∏—Å–ø–µ—Ç—á–µ—Ä!")
    time.sleep(1)
    await callback_query.answer("üó£ –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —è –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏.\n–ù–µ –≤–µ—Ä–∏—à—å?\n–î–∞ —è —Ç–µ–±–µ –æ—Ç–≤–µ—á–∞—é—é—é.")
    time.sleep(1)
    await callback_query.answer("üó£ –ö–æ—Ä–æ—á–µ, —Å–µ–π—á–∞—Å –æ–±—ä–µ–∫—Ç–æ–º –º–æ–∏—Ö –≥–ª—É–±–∏–Ω–Ω—ã–π —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π —è–≤–ª—è–µ—Ç—Å—è –≤–∞–∂–Ω–æ—Å—Ç—å –∞–ª–∫–æ–≥–æ–ª—è —É —Å–º–µ—Ä—Ç–Ω—ã—Ö.")
    time.sleep(1)
    await callback_query.answer("üó£ –ù–µ –º–æ–≥ –±—ã —Ç—ã –º–Ω–µ –ø–æ–º–æ—á—å –º–Ω–µ?\n–ù—É —Ç–∞–º –ø—Ä–æ—Å—Ç–æ –ø–æ–æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å–∏–∫–∏?\n–¢—ã –Ω–µ –±–æ–π—Å—è, —Ç–∞–º –Ω–µ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã, —Ç–∞–º —Ç–∞–∫–∏–µ, –∫—É–ª—å—Ç—É—Ä–Ω–æ-—Å–ø–∏—Ä—Ç–Ω—ã–µ.")
    time.sleep(1)
    await callback_query.answer("üó£ –ù—É –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, —è –ø–ª–∞—á—É –∑–∞ —Å–≤–æ–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∏–∫–æ–ª—ã. –ú–æ–≥—É –∫–æ–∫—Ç–µ–π–ª–∏—á–∏–∫ —Ç–µ–±–µ –∑–∞ –ø–æ–º–æ—â—å –∫—É–ø–∏—Ç—å, –º–æ–≥—É –¥–µ–Ω—å–≥–∞–º–∏ –æ—Ç–¥–∞—Ç—å.")
    time.sleep(1)
    await callback_query.answer("üó£ –ù—É —á—Ç–æ? –ü–æ–º–æ–∂–µ—à—å?\n–¢–æ–ª—å–∫–æ —É—á—Ç–∏, —á—Ç–æ –æ–¥–Ω–∞ –æ—à–∏–±–∫–∞ –∏ –∫–≤–∏–∑ –Ω–∞–¥–æ –∑–∞–Ω–æ–≤–æ –Ω–∞—á–∏–Ω–∞—Ç—å.")
    time.sleep(1)
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üç∑ –ë–ª–µ—Å–Ω—É—Ç—å —Å–≤–æ–∏–º–∏ –∞–ª–∫–æ-–∑–Ω–∞–Ω–∏—è–º–∏ üç∑",
                    callback_data="quiz_1")
    keyboard.button(text="üôÖ‚Äç‚ôÄÔ∏è –ù–∞—Ñ–∏–≥ —ç—Ç–æ–≥–æ —Ñ–∏–ª–æ—Å–æ—Ñ–∞ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–Ω–æ–≥–æ üôÖ‚Äç‚ôÄÔ∏è",
                    callback_data=f"npc_{npc_id}")
    keyboard.adjust(1)
    await callback_query.answer("–ß—Ç–æ –¥–µ–ª–∞—Ç—å –±—É–¥–µ–º?", reply_markup=keyboard.as_markup())


async def quiz_1(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –ù—É —á—Ç–æ –∂, –ø–æ–≥–Ω–∞–ª–∏, –º–æ–π —é–Ω—ã–π —Ñ–∏–ª–æ—Å–æ—Ñ!")
    time.sleep(2)
    await callback_query.answer("üó£ –ö–∞–∫–æ–π –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∏–∑ –≤–∏–Ω–æ–≥—Ä–∞–¥–Ω–æ–≥–æ —Å–æ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –±—ã–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ–µ—Ä–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –∏ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ª–∞–¥–∫–∏–π –≤–∫—É—Å?")
    keyboard.button(text="–†–æ–∑–æ–≤–æ–µ –≤–∏–Ω–æ", callback_data="false")
    keyboard.button(text="–õ–∞–º–±—Ä—É—Å–∫–æ", callback_data="false")
    keyboard.button(text="–ü–æ—Ä—Ç–≤–µ–π–Ω", callback_data="quiz_2")
    keyboard.button(text="–í–µ—Ä–º—É—Ç", callback_data="false")
    keyboard.adjust(2)
    await callback_query.answer("–í–∞—à –≤—ã–±–æ—Ä:", reply_markup=keyboard.as_markup())


async def quiz_2(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ç–æ—Ä–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –ö–æ–Ω–µ—á–Ω–æ –∂–µ —ç—Ç–æ –±—ã–ª –ø–æ—Ä—Ç–≤–µ–π–Ω - –∫—Ä–µ–ø–ª—ë–Ω–æ–µ –≤–∏–Ω–æ, –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ–µ –Ω–∞ —Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ–∫–µ –ü–æ—Ä—Ç—É–≥–∞–ª–∏–∏ –≤ –¥–æ–ª–∏–Ω–µ —Ä–µ–∫–∏ –î–æ—Ä—É!")
    time.sleep(1)
    await callback_query.answer("üó£ –ö–∞–∫–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏–π —Å–ø–∏—Ä—Ç–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –Ω–∞–ø–∏—Ç–∫–æ–º –ë—Ä–∞–∑–∏–ª–∏–∏?")
    keyboard.button(text="–ü–∏—Å–∫–æ", callback_data="false")
    keyboard.button(text="–¢–µ–∫–∏–ª–∞", callback_data="false")
    keyboard.button(text="–°–∞–º–±—É–∫–∞", callback_data="false")
    keyboard.button(text="–ö–∞—à–∞—Å–∞", callback_data="quiz_3")
    keyboard.adjust(2)
    await callback_query.answer("–í–∞—à –≤—ã–±–æ—Ä:", reply_markup=keyboard.as_markup())


async def quiz_3(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç—Ä–µ—Ç—å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –ò —ç—Ç–æ –∫–∞—à–∞—Å–∞ - –∫—Ä–µ–ø–∫–∏–π –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫, –ø–æ—Ö–æ–∂ –Ω–∞ —Ä–æ–º, –Ω–æ –ø–µ—Ä–≤—ã–π –¥–µ–ª–∞—é—Ç –∏–∑ —Å–∞—Ö–∞—Ä–Ω–æ–≥–æ —Ç—Ä–æ—Å–Ω–∏–∫–∞, –∞ –≤—Ç–æ—Ä–æ–π —á–∞—â–µ –≤—Å–µ–≥–æ –∏–∑ –ø–∞—Ç–æ–∫–∏.")
    time.sleep(1)
    await callback_query.answer("üó£ –ö–∞–∫–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏–π –ª–∏–∫–µ—Ä–æ–≤ –∏–º–µ–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–π –≤–∫—É—Å –º–µ–¥–∞ –∏ —Ç—Ä–∞–≤?")
    keyboard.button(text="–î—Ä–∞–º–±—É–∏", callback_data="quiz_4")
    keyboard.button(text="–ê–º–∞—Ä–µ—Ç—Ç–æ", callback_data="false")
    keyboard.button(text="–ö—É–∞–Ω—Ç—Ä–æ", callback_data="false")
    keyboard.button(text="–ë–ª—é –∫—é—Ä–∞—Å–∞–æ", callback_data="false")
    keyboard.adjust(2)
    await callback_query.answer("–í–∞—à –≤—ã–±–æ—Ä:", reply_markup=keyboard.as_markup())


async def quiz_4(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –î—Ä–∞–º–±—ÉÃÅ–∏ ‚Äî –ª–∏–∫—ë—Ä, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –∏–∑ –≤—ã–¥–µ—Ä–∂–∞–Ω–Ω–æ–≥–æ —à–æ—Ç–ª–∞–Ω–¥—Å–∫–æ–≥–æ –≤–∏—Å–∫–∏ —Å –∞—Ä–æ–º–∞—Ç–æ–º –º—ë–¥–∞, "
                                "–∞–Ω–∏—Å–∞, —à–∞—Ñ—Ä–∞–Ω–∞, –º—É—Å–∫–∞—Ç–Ω–æ–≥–æ –æ—Ä–µ—Ö–∞ –∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç—Ä–∞–≤.")
    time.sleep(1)
    await callback_query.answer("üó£ –ö–∞–∫–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–∫—Ç–µ–π–ª–µ–π —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ –≤–∫–ª—é—á–∞–µ—Ç —Ç–µ–∫–∏–ª—É, –ª–∏–∫–µ—Ä –¢—Ä–∏–ø–ª –°–µ–∫ –∏ –ª–∞–π–º–æ–≤—ã–π —Å–æ–∫?")
    keyboard.button(text="–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", callback_data="quiz_5")
    keyboard.button(text="–õ–æ–Ω–≥-–ê–π–ª–µ–Ω–¥", callback_data="false")
    keyboard.button(text="–î–∞–π–∫–∏—Ä–∏", callback_data="false")
    keyboard.button(text="–ú–∞–π –¢–∞–π", callback_data="false")
    keyboard.adjust(2)
    await callback_query.answer("–í–∞—à –≤—ã–±–æ—Ä:", reply_markup=keyboard.as_markup())


async def quiz_5(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—è—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –ù—É –∫–æ–Ω–µ—á–Ω–æ –∂–µ —ç—Ç–æ - –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞! "
                                "–í —Å–∞–º–æ–π –ø–æ–ø—É–ª—è—Ä–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∞–≤—Ç–æ—Ä—Å—Ç–≤–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Å–≤–µ—Ç—Å–∫–æ–π –ª—å–≤–∏—Ü–µ –ú–∞—Ä–≥–∞—Ä–∏—Ç–µ –°–µ–π–º–∑. "
                                "–ü–æ –ª–µ–≥–µ–Ω–¥–µ, –æ–Ω–∞ —Å–º–µ—à–∞–ª–∞ –∫–æ–∫—Ç–µ–π–ª—å –∏–∑ —Ç–µ–∫–∏–ª—ã, –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤–æ–≥–æ –ª–∏–∫–µ—Ä–∞ –∏ –ª–∞–π–º–æ–≤–æ–≥–æ —Å–æ–∫–∞ "
                                "–¥–ª—è –≥–æ—Å—Ç–µ–π —Å–≤–æ–µ–π –≤–µ—á–µ—Ä–∏–Ω–∫–∏ –≤ –ê–∫–∞–ø—É–ª—å–∫–æ –≤ –∫–æ–Ω—Ü–µ 40-—Ö.")
    time.sleep(1)
    await callback_query.answer("üó£ –ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–µ–Ω–∏–∫–∞ —Å–º–µ—à–∏–≤–∞–Ω–∏—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–æ–±–∞–≤–ª—è—é—Ç –ø–æ –æ—á–µ—Ä–µ–¥–∏, "
                                "–Ω–µ –ø–µ—Ä–µ–º–µ–≥–∏–≤–∞—è –∏—Ö, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–ª–æ–∏ —É –∫–æ–∫—Ç–µ–π–ª–µ–π?")
    keyboard.button(text="–°—Ç–∏—Ä", callback_data="false")
    keyboard.button(text="–®–µ–π–∫", callback_data="false")
    keyboard.button(text="–§–ª–æ–∞—Ç", callback_data="quiz_6")
    keyboard.button(text="–ë–∏–ª–¥", callback_data="false")
    keyboard.adjust(2)
    await callback_query.answer("–í–∞—à –≤—ã–±–æ—Ä:", reply_markup=keyboard.as_markup())


async def quiz_6(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —à–µ—Å—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –ò —ç—Ç–æ –º–µ—Ç–æ–¥ —Ñ–ª–æ–∞—Ç. –¢–∞–∫–∏–º –º–µ—Ç–æ–¥–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–µ–ª–∞—é—Ç –∫–æ–∫—Ç–µ–π–ª–∏ –ë-52 –∏–ª–∏ –•–∏—Ä–∞—Å–∏–º—É.")
    time.sleep(1)
    await callback_query.answer("üó£ –ß—Ç–æ –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–º —Å–∞–º–±—É–∫–∏?")
    keyboard.button(text="–ü–æ–ª—ã–Ω—å", callback_data="false")
    keyboard.button(text="–ü—à–µ–Ω–∏—Ü–∞", callback_data="false")
    keyboard.button(text="–ê–≥–∞–≤–∞", callback_data="false")
    keyboard.button(text="–ê–Ω–∏—Å", callback_data="quiz_7")
    keyboard.adjust(2)
    await callback_query.answer("–í–∞—à –≤—ã–±–æ—Ä:", reply_markup=keyboard.as_markup())


async def quiz_7(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–µ–¥—å–º–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –°–∞–º–±—ÉÃÅ–∫–∞ ‚Äî –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –ª–∏–∫—ë—Ä —Å –∞—Ä–æ–º–∞—Ç–æ–º –∞–Ω–∏—Å–∞, –∫—Ä–µ–ø–æ—Å—Ç—å—é –æ—Ç 38% –¥–æ 42%."
                                "–í—ã—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∏–∑ —ç–∫—Å—Ç—Ä–∞–∫—Ç–∞ –∞–Ω–∏—Å–∞ –∑–≤—ë–∑–¥—á–∞—Ç–æ–≥–æ, –∏ –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –¥—Ä—É–≥–∏—Ö —Ö–æ—Ä–æ—à–æ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∞–Ω–∏—Å–æ–≤—ã—Ö –∫—Ä–µ–ø–∫–∏—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤,"
                                "–æ—Å–æ–±—É—é —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤–∫—É—Å–∞, —Å–∞–º–±—É–∫–µ –ø—Ä–∏–¥–∞–µ—Ç –µ—â–µ –æ–¥–∏–Ω –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç ‚Äì –º–∞—Å–ª–æ –±—É–∑–∏–Ω—ã.")
    time.sleep(1)
    await callback_query.answer("üó£ –ò–∑ –∫–∞–∫–æ–≥–æ —Å–æ—Ä—Ç–∞ –≤–∏–Ω–æ–≥—Ä–∞–¥–∞ —á–∞—â–µ –≤—Å–µ–≥–æ –¥–µ–ª–∞—é—Ç –≤–∏–Ω–æ?")
    keyboard.button(text="–ö–∞–±–µ—Ä–Ω–µ –°–æ–≤–∏–Ω—å–æ–Ω", callback_data="quiz_8")
    keyboard.button(text="–®–∞—Ä–¥–æ–Ω–µ", callback_data="false")
    keyboard.button(text="–ú–µ—Ä–ª–æ", callback_data="false")
    keyboard.button(text="–ü–∏–Ω–æ –ù—É–∞—Ä", callback_data="false")
    keyboard.adjust(2)
    await callback_query.answer("–í–∞—à –≤—ã–±–æ—Ä:", reply_markup=keyboard.as_markup())


async def quiz_8(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ—Å—å–º–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –ö–∞–±–µ—Ä–Ω–µ –°–æ–≤–∏–Ω—å–æ–Ω –æ–±–ª–∞–¥–∞–µ—Ç –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º –≤–∫—É—Å–æ–º —Å –Ω–æ—Ç–∫–∞–º–∏ —á–µ—Ä–Ω–æ–π —Å–º–æ—Ä–æ–¥–∏–Ω—ã, —á–µ—Ä–µ—à–Ω–∏ –∏ –∑–µ–ª–µ–Ω–æ–≥–æ –ø–µ—Ä—Ü–∞,"
                                "–≤—ã—Å–æ–∫–æ–π —Ç–∞–Ω–∏–Ω–Ω–æ—Å—Ç—å—é –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–æ–º –¥–ª—è –¥–æ–ª–≥–æ–π –≤—ã–¥–µ—Ä–∂–∫–∏.")
    time.sleep(1)
    await callback_query.answer("üó£ –ò–∑ —á–µ–≥–æ –¥–µ–ª–∞—é—Ç —Å–∫–æ—Ç—á?")
    keyboard.button(text="–†–æ–∂—å", callback_data="false")
    keyboard.button(text="–ü—à–µ–Ω–∏—Ü–∞", callback_data="false")
    keyboard.button(text="–Ø—á–º–µ–Ω—å", callback_data="quiz_9")
    keyboard.button(text="–ö—É–∫—É—Ä—É–∑–∞", callback_data="false")
    keyboard.adjust(2)
    await callback_query.answer("–í–∞—à –≤—ã–±–æ—Ä:", reply_markup=keyboard.as_markup())


async def quiz_9(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–≤—è—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –•–æ—Ç—è –∏ —Ä–æ–∂—å, –∏ –ø—à–µ–Ω–∏—Ü–∞, –∏ –∫—É–∫—É—Ä—É–∑–∞ —è–≤–ª—è—é—Ç—Å—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏ –≤–∏—Å–∫–∏, –≤ –æ—Å–Ω–æ–≤–µ —Å–∫–æ—Ç—á–∞ (—à–æ—Ç–ª–∞–Ω–¥—Å–∫–æ–≥–æ –≤–∏—Å–∫–∏) –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç —è—á–º–µ–Ω—å.")
    time.sleep(1)
    await callback_query.answer("üó£ –ò–∑ –∫–∞–∫–æ–≥–æ —Ñ—Ä—É–∫—Ç–∞ –Ω–µ–ª—å–∑—è —Å–¥–µ–ª–∞—Ç—å —Å–∏–¥—Ä?")
    keyboard.button(text="–í–∏—à–Ω—è", callback_data="false")
    keyboard.button(text="–í–∏–Ω–æ–≥—Ä–∞–¥", callback_data="quiz_10")
    keyboard.button(text="–ì—Ä—É—à–∞", callback_data="false")
    keyboard.button(text="–ü–µ—Ä—Å–∏–∫", callback_data="false")
    keyboard.adjust(2)
    await callback_query.answer("–í–∞—à –≤—ã–±–æ—Ä:", reply_markup=keyboard.as_markup())


async def quiz_10(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ—Å—è—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–≤–∏–∑–∞ –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –æ—Ç NPC.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –ï—Å–ª–∏ –º—ã –ø–æ–ø—Ä–æ–±—É–µ–º —Å–¥–µ–ª–∞—Ç—å —Å–∏–¥—Ä –∏–∑ –≤–∏–Ω–æ–≥—Ä–∞–¥–∞, –º—ã –ø–æ–ª—É—á–∏–º –≤–∏–Ω–æ. –£–ø—Å—Å—Å.")
    time.sleep(1)
    await callback_query.answer("üó£ –ö–∞–∫–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏–π –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –±—Ä–µ–Ω–¥–∏?")
    keyboard.button(text="–ö–æ–Ω—å—è–∫", callback_data="false")
    keyboard.button(text="–ê—Ä–º–∞–Ω—å—è–∫", callback_data="false")
    keyboard.button(text="–†–æ–º", callback_data="quiz_finish")
    keyboard.button(text="–ö–∞–ª—å–≤–∞–¥–æ—Å", callback_data="false")
    keyboard.adjust(2)
    await callback_query.answer("–í–∞—à –≤—ã–±–æ—Ä:", reply_markup=keyboard.as_markup())


async def quiz_finish(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–∏–∑–∞ –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –ë—Ä–µ–Ω–¥–∏ - —ç—Ç–æ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫, –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º—ã–π –∏–∑ –¥–∏—Å—Ç–∏–ª–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–∏–Ω–æ–≥—Ä–∞–¥–Ω–æ–≥–æ –≤–∏–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π —á–∞—Å—Ç–æ –≤—ã–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –¥—É–±–æ–≤—ã—Ö –±–æ—á–∫–∞—Ö."
                                "–†–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç–µ–π –±—Ä–µ–Ω–¥–∏, –∫–∞–∫ –≤–∏–¥–∏—à—å, –±—ã–≤–∞–µ—Ç –º–Ω–æ–≥.")
    await callback_query.answer("üó£ –û–±–∞–ª–¥–µ—Ç—å, —Ç—ã –ø—Ä–æ—à–µ–ª –≤–µ—Å—å —Ç–µ—Å—Ç.\n\n–î–∞–∂–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —Å –∫–∞–∫–æ–π –ø–æ–ø—ã—Ç–∫–∏?\n–ê—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞–∞—Ö")
    await callback_query.answer("üó£ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –¥—Ä—É–≥ –º–æ–π —ç—Ä—É–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, —Ç—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –∞–ª–∫–æ-–∑–Ω–∞—Ç–æ–∫.\n–ó–∞ —Ç–∞–∫–æ–π —É—Å–ø–µ—Ö –∫–∏–Ω—É —Ç–µ–±–µ –Ω–∞ –∫–∞—Ä—Ç—É —Ç—ã—â–∏ 2.")
    keyboard.button(text="üíµ –í–∑—è—Ç—å money –∏ –≥–æ—Ä–¥–∏—Ç—å—Å—è —Å–æ–±–æ–π üíµ",
                    callback_data="money_2000_Quiz")
    await callback_query.answer("–í—ã–±–æ—Ä–∞ –Ω–µ—Ç, –Ω–∞–¥–æ —Ç—ã–∫–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∏–∂–µ:", reply_markup=keyboard.as_markup())


async def quiz_false(callback_query: CallbackQuery, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–∏–∑–∞ –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    await callback_query.answer("üó£ –ù—É —á—Ç–æ –∂, –º–æ–π –¥—Ä—É–≥, —Ç–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ, –ø—Ä–∏–¥–µ—Ç—Å—è –Ω–∞—á–∞—Ç—å –≤—Å—ë –∑–∞–Ω–æ–≤–æ((")
    keyboard.button(text="üê£ –ù–∞—á–∞—Ç—å –∑–∞–Ω–∞–≤–æ üê£", callback_data="quiz_1")
    keyboard.button(text="üôÖ‚Äç‚ôÄÔ∏è –ù–∞—Ñ–∏–≥ —ç—Ç–æ—Ç –∫–≤–∏–∑, —É—Ö–æ–∂—É üôÖ‚Äç‚ôÄÔ∏è",
                    callback_data="to_do")
    await callback_query.answer("–í–æ—Ç –æ–Ω–∞ - —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –≤—ã–±–æ—Ä–∞:", reply_markup=keyboard.as_markup())


async def get_money(callback_query: CallbackQuery, data: str, user_id: int) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–Ω–µ–≥ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - callback_query: –û–±—ä–µ–∫—Ç callback_query.
    - data: –î–∞–Ω–Ω—ã–µ –∏–∑ callback_data.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    data_parts = data.split('_')
    get_money = int(data_parts[1])
    quest_name = data_parts[2]
    now_money = get_user_data("money", user_id)
    update_user_data("money", now_money + get_money, user_id)
    update_quest_data("done", 1, quest_name, user_id)
    npc_id = get_npc_data(user_id, quest_name)
    update_npc_data("quest_done", 1, npc_id)
    await main_buttons.deactivate_buttons(callback_query, user_id, callback_query.message_id)
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üï∫ Let's go —Ç—É—Å–∏—Ç—å –¥–∞–ª—å—à–µ üï∫", callback_data="to_do")
    await callback_query.answer(f"–£—Ä–∞–∞–∞–∞–∞, —Ç–µ–ø–µ—Ä—å —É –Ω–∞—Å –Ω–∞ —Å—á–µ—Ç—É {now_money + get_money} –º–æ–Ω–µ—Ç–æ–∫", reply_markup=keyboard.as_markup())
